// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        BigInt    @id @default(autoincrement())
  email     String    @unique
  password  String?
  fullname  String?
  role      Role?     @default(USER)
  status    Status?   @default(ACTIVE)
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

model Room {
  id        BigInt    @id @default(autoincrement())
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

model RoomKindStep {
  id             BigInt    @id @default(autoincrement())
  roomId         BigInt
  roomStepType   String?
  kindOfProperty String?
  kindOfPlace    String?
  totalRooms     String?
  amenities      String[]
  sharedSpaces   String[]
  noOfGuests     Int?
  noOfBedrooms   Int?
  noOfBeds       Int?
  noOfBathrooms  Int?
  country        String?
  state          String?
  city           String?
  line1          String?
  line2          String?
  zipcode        String?
  isPersonalHome Boolean?
  createdAt      DateTime? @default(now())
  updatedAt      DateTime? @updatedAt
}

model RoomOverviewStep {
  id           BigInt    @id @default(autoincrement())
  roomId       BigInt
  images       String[]
  title        String
  description  String
  roomStepType String?
  createdAt    DateTime? @default(now())
  updatedAt    DateTime? @updatedAt
}

model RoomRuleStep {
  id                 BigInt    @id @default(autoincrement())
  roomId             BigInt
  guestRules         Json?
  checkinTime        String?
  checkoutTime       String?
  cancellationPolicy String?
  currency           String?
  basePrice          Int?
  cleaningFee        Int?
  weeklyDiscount     String?
  monthlyDiscount    String?
  availableDate      String?
  minStay            Int?
  maxStay            Int?
  bookingType        String?
  roomStepType       String?
  createdAt          DateTime? @default(now())
  updatedAt          DateTime? @updatedAt
}

enum Status {
  ACTIVE
  INACTIVE
}

enum Role {
  USER
  ADMIN
}
