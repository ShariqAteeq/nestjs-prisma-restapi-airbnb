// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        BigInt    @id @default(autoincrement())
  email     String    @unique
  password  String?
  fullname  String?
  role      Role?     @default(USER)
  status    Status?   @default(ACTIVE)
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

model Room {
  id                 BigInt        @id @default(autoincrement())
  images             String[]
  title              String?
  description        String?
  status             String?
  guestRules         Json?
  checkinTime        String?
  checkoutTime       String?
  cancellationPolicy String?
  currency           String?
  basePrice          Int?
  cleaningFee        Int?
  weeklyDiscount     String?
  monthlyDiscount    String?
  startDate          DateTime?
  endDate            DateTime?
  minStay            Int?
  maxStay            Int?
  bookingType        String?
  roomStepType       String?
  isPersonalHome     Boolean?
  kindOfProperty     String?
  kindOfPlace        String?
  totalRooms         String?
  amenities          String[]
  sharedSpaces       String[]
  noOfGuests         Int?
  noOfBedrooms       Int?
  noOfBeds           Int?
  noOfBathrooms      Int?
  createdAt          DateTime?     @default(now())
  updatedAt          DateTime?     @updatedAt
  location           RoomLocation?
}

model RoomLocation {
  id        BigInt    @id @default(autoincrement())
  room      Room      @relation(fields: [roomId], references: [id])
  roomId    BigInt    @unique
  country   String?
  state     String?
  city      String?
  address   String?
  lat       Float?
  lng       Float?
  zipcode   String?
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

enum Status {
  ACTIVE
  INACTIVE
}

enum Role {
  USER
  ADMIN
}

enum RoomStepType {
  ROOM_KIND
  ROOM_RULE
  ROOM_OVERVIEW
}
